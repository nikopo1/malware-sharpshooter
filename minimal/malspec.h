#ifndef _MALSPEC_H_
#define _MALSPEC_H_

#include "graphbuilder.h"

/*
 * Returns the minimal transversals found for the graph. As the
 * edges don't have any weights attached, a simple BFS is
 * sufficient.
 */
std::vector<Graph*> minimal_transversal(Graph* graph);

/*
 * Determines the minimal contrast edge set of the first graph
 * with respect to the second graph given as parameters.
 */
std::vector<Graph*> minimal_contrast_edge_sets(Graph *graph_positive, Graph *graph_negative);

/*
 * Determines the minimal contrast vertex set of the first graph
 * with respect to the second graph given as parameters.
 */
std::vector<Graph*> minimal_contrast_vertex_sets(Graph *graph_positive, Graph *graph_negative);

/*
 * Determines the minimal contrast subgraph set of the first
 * graph with respect to the second graph given as parameter
 */
std::vector<Graph*> minimal_contrast_subgraph_set(Graph *graph_positive, Graph *graph_negative);

/*
 * Runs the malspec-mining algorithm for the malware and benign programs
 * (the executables pathfiles are in the vectors) given as parameters.
 */
std::vector<Graph*> malspec_mining(GraphBuilder &gb, const std::string &malware,
		const std::vector<std::string> &benign);

#endif
