#ifndef _SCID_H_
#define _SCID_H_

#include <asm-generic/ioctl.h> /* ioctl code macro definiton */

#define SCID_DEV_NAME	"scid"
#define SCID_DEV_MINOR	43	/* because 6*7 + 1 =43 */

#define IOCTL_SET_PID		_IOW(0xA1, 1, scid_info_t)
#define IOCTL_ADD_SYSCALL	_IOW(0xA1, 2, scid_info_t)
#define IOCTL_DEL_SYSCALL	_IOW(0xA1, 3, scid_info_t)
#define IOCTL_CLEAR_HISTORY	_IO(0xA1, 4)
#define IOCTL_COUNT_HISTORY	_IOR(0xA1, 5, int)

/* data struct for scid ioctl operation */
typedef struct _scid_info_t {
	int pid;
	int sc_no; // system call number to be monitored
} scid_info_t;

/* data struct for syscall intercepting */
struct syscall_params {
	long ebx, ecx, edx, esi, edi, ebp, eax;
};

/* data struct for read syscall history */
typedef struct _scid_hist_t {
	int sc_no;
	struct syscall_params sc_params;
} scid_hist_t;

#endif
